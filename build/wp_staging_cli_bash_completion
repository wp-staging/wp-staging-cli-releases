# Bash completion script for wp-staging-cli
#
# This script provides command-line auto-completion for wp-staging-cli.
# To enable completion, copy this file to the /etc/bash_completion.d/ directory.
#
# Usage:
#   source /etc/bash_completion.d/wp-staging-cli
#
# Author: WP Staging <https://wp-staging.com/support/>
# License: MIT

_wp_staging_cli() {
    local cur prev commands general_opts restore_opts
    COMPREPLY=()

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    commands="extract restore help"

    # Define options with short (single dash) and long (single or double dash)
    general_opts="
        -l -license --license
        -o -outputdir --outputdir
        -n -normalizedb --normalizedb
        -workingdir --workingdir
        -siteurl --siteurl
        -db-prefix --db-prefix
        -overwrite --overwrite
        -verify --verify
        -yes --yes
        -confirm-timeout --confirm-timeout
        -skip-extract --skip-extract
        -or -only-wproot --only-wproot
        -ow -only-wpcontent --only-wpcontent
        -op -only-plugins --only-plugins
        -ot -only-themes --only-themes
        -om -only-muplugins --only-muplugins
        -ou -only-uploads --only-uploads
        -ol -only-languages --only-languages
        -od -only-dbfile --only-dbfile
        -oe -only-dropins --only-dropins
        -of -only-file --only-file
        -sr -skip-wproot --skip-wproot
        -sw -skip-wpcontent --skip-wpcontent
        -sp -skip-plugins --skip-plugins
        -st -skip-themes --skip-themes
        -sm -skip-muplugins --skip-muplugins
        -su -skip-uploads --skip-uploads
        -sl -skip-languages --skip-languages
        -sd -skip-dbfile --skip-dbfile
        -se -skip-dropins --skip-dropins
        -sf -skip-file --skip-file
        -dm -dump-metadata --dump-metadata
        -di -dump-index --dump-index
        -dh -dump-header --dump-header
        -do -dump-options --dump-options
        -d -debug --debug
        -q -quiet --quiet
        -v -version --version
        -h -help --help
    "

    restore_opts="
        -p -path --path
        -wd -overwrite-db --overwrite-db
        -wr -overwrite-wproot --overwrite-wproot
        -db-innodb-strict-mode --db-innodb-strict-mode
        -db-file --db-file
        -db-insert-batch-size --db-insert-batch-size
        -db-host --db-host
        -db-name --db-name
        -db-user --db-user
        -db-pass --db-pass
        -db-socket --db-socket
        -db-charset --db-charset
        -db-collate --db-collate
        -db-ssl-ca-cert --db-ssl-ca-cert
        -db-ssl-cert --db-ssl-cert
        -db-ssl-key --db-ssl-key
        -db-ssl-mode --db-ssl-mode
        ${general_opts}
    "

    # Handle top-level command completion
    if [[ ${COMP_CWORD} -eq 1 ]]; then
        COMPREPLY=( $(compgen -W "${commands}" -- "${cur}") )
        return
    fi

    case "${COMP_WORDS[1]}" in
        restore)
            COMPREPLY=( $(compgen -W "${restore_opts}" -- "${cur}") )
            ;;
        extract)
            COMPREPLY=( $(compgen -W "${general_opts}" -- "${cur}") )
            ;;
        help)
            COMPREPLY=()
            ;;
        *)
            COMPREPLY=( $(compgen -W "${general_opts}" -- "${cur}") )
            ;;
    esac

    # Handle file path suggestions for specific options
    case "${prev}" in
        -o|-outputdir|--outputdir|-workingdir|--workingdir|-p|-path|--path|-db-file|--db-file|-db-socket|--db-socket|-db-ssl-ca-cert|--db-ssl-ca-cert|-db-ssl-cert|--db-ssl-cert|-db-ssl-key|--db-ssl-key)
            COMPREPLY=( $(compgen -o filenames -A directory -- "${cur}") )
            return
            ;;
    esac

    return
}

complete -F _wp_staging_cli wp-staging-cli
complete -F _wp_staging_cli ./wp-staging-cli
